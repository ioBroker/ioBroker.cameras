{"version":3,"sources":["serviceWorker.js","Tabs/Options.js","Types/URLImage.js","Types/URLBasicAuthImage.js","Tabs/Cameras.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Options","props","state","showHint","toast","ips","requesting","webInstances","this","getIpAddresses","then","_ips","getExtendableInstances","setState","map","item","_id","replace","text","errorText","title","I18n","t","onClose","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","ContentProps","message","id","action","IconButton","color","className","classes","close","onClick","length","FormControl","bind","InputLabel","Select","disabled","value","native","onChange","e","target","MenuItem","ip","TextField","label","type","min","max","port","defaultTimeout","webInstance","instance","messageText","socket","sendTo","adapterName","data","error","showError","result","tab","common","onError","onLoad","renderSettings","renderHint","renderToast","renderMessage","renderError","Component","withStyles","theme","width","minHeight","marginRight","marginBottom","minWidth","Config","JSON","parse","stringify","settings","url","page","password","username","timeout","decrypt","encrypt","reportSettings","autoComplete","TYPES","URLImage","name","urlBasicAuth","COMMON_ATTRS","Server","editCam","editChanged","instanceAlive","webInstanceHost","Object","keys","forEach","translated","getWebInstances","getAdapterInstances","list","find","endsWith","editedSettings","editedSettingsOld","attr","cameras","setTimeout","clearTimeout","body","testImg","cam","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","divConfig","cb","sampleUrl","href","key","rel","divTestCam","Button","variant","size","buttonTest","onTest","startIcon","alt","imgTest","src","DialogActions","oldValue","i","Fab","lineEdit","console","log","buttonIcon","lineUp","splice","lineNoButtonUp","lineDown","lineNoButtonDown","lineDelete","c","ii","Date","now","description","m","lineDiv","lineText","helperText","lineDesc","desc","lineType","renderCameraButtons","lineUrl","push","renderCamera","renderConfigDialog","height","paddingBottom","borderBottom","display","marginLeft","marginTop","opacity","fontSize","fontStyle","verticalAlign","spacing","App","extendedProps","translations","require","onAliveChanged","alive","val","unsubscribeState","instanceId","getState","updateNativeValue","Math","round","random","toFixed","selectedTab","loaded","style","background","themeType","AppBar","position","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","selected","isIFrame","tabContentIFrame","tabContent","onLoadConfig","host","onConfigError","configError","setConfigurationError","renderSaveCloseButtons","GenericApp","root","padding","overflow","version","themeName","Utils","getThemeName","build","ReactDOM","render","onThemeChange","_themeName","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e73d086d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogError from \"@iobroker/adapter-react/Dialogs/Error\";\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    bind: {\r\n        marginRight: 10,\r\n        marginBottom: 20,\r\n        minWidth: 200,\r\n    },\r\n    port: {\r\n        width: 100\r\n    },\r\n    defaultTimeout: {\r\n        width: 150\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showHint: false,\r\n            toast: '',\r\n            ips: [],\r\n            requesting: true,\r\n            webInstances: []\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let ips;\r\n        this.props.getIpAddresses()\r\n            .then(_ips => ips = _ips)\r\n            .then(() => this.props.getExtendableInstances())\r\n            .then(webInstances =>\r\n                this.setState({requesting: false, ips, webInstances: webInstances.map(item =>\r\n                        item._id.replace('system.adapter.', ''))}));\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        }\r\n        return <DialogError text={this.state.errorText} title={I18n.t('Error')} onClose={() => this.setState({errorText: ''})}/>;\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) {\r\n            return null;\r\n        }\r\n        return <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={true}\r\n            autoHideDuration={6000}\r\n            onClose={() => this.setState({toast: ''})}\r\n            ContentProps={{\r\n                'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{this.state.toast}</span>}\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={this.props.classes.close}\r\n                    onClick={() => this.setState({toast: ''})}\r\n                >\r\n                    <IconClose />\r\n                </IconButton>,\r\n            ]}\r\n        />;\r\n    }\r\n\r\n    renderHint() {\r\n        if (this.state.showHint) {\r\n            return <Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderSettings() {\r\n        return [\r\n            this.state.ips && this.state.ips.length ?\r\n                <FormControl key=\"bindSelect\"  className={this.props.classes.bind}>\r\n                    <InputLabel>{ I18n.t('Local IP address') }</InputLabel>\r\n                    <Select\r\n                         disabled={ this.state.requesting }\r\n                         value={ this.props.native.bind || '' }\r\n                         onChange={ e => this.props.onChange('bind', e.target.value) }\r\n                    >\r\n                        <MenuItem value=\"127.0.0.1\">127.0.0.1</MenuItem>\r\n                        { this.state.ips.map(ip => <MenuItem key={ip} value={ ip }>{ ip }</MenuItem>) }\r\n                    </Select></FormControl> :\r\n                <TextField\r\n                    disabled={this.state.requesting}\r\n                    key=\"bind\"\r\n                    className={this.props.classes.bind}\r\n                    label={I18n.t('Local IP address')}\r\n                    value={this.props.native.bind}\r\n                    onChange={e => this.props.onChange('bind', e.target.value)}\r\n                />,\r\n            <TextField\r\n                disabled={this.state.requesting}\r\n                key=\"port\"\r\n                type=\"number\"\r\n                min={1}\r\n                max={0xFFFF}\r\n                className={this.props.classes.port}\r\n                label={I18n.t('Local port')}\r\n                value={this.props.native.port}\r\n                onChange={e => this.props.onChange('port', e.target.value)}\r\n            />,\r\n            <br key=\"br1\"/>,\r\n            <TextField\r\n                disabled={this.state.requesting}\r\n                key=\"defaultTimeout\"\r\n                type=\"number\"\r\n                min={0}\r\n                max={10000}\r\n                className={this.props.classes.defaultTimeout}\r\n                label={I18n.t('Default timeout (ms)')}\r\n                value={this.props.native.defaultTimeout}\r\n                onChange={e => this.props.onChange('defaultTimeout', e.target.value)}\r\n            />,\r\n            <br key=\"br2\"/>,\r\n            <FormControl key=\"webInstanceSelect\"  className={this.props.classes.bind}>\r\n                <InputLabel>{I18n.t('WEB Instance')}</InputLabel>\r\n                <Select\r\n                    disabled={this.state.requesting}\r\n                    value={this.props.native.webInstance}\r\n                    onChange={e => this.props.onChange('webInstance', e.target.value)}\r\n                >\r\n                    <MenuItem value=\"*\">{I18n.t('All')}</MenuItem>\r\n                    {this.state.webInstances ? this.state.webInstances.map(instance => <MenuItem key={instance} value={instance}>{instance}</MenuItem>) : null}\r\n                </Select></FormControl>\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    checkConnection() {\r\n        this.setState({requesting: true}, () =>\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'test', this.props.native, data => {\r\n                if (data.error) {\r\n                    this.setState({requesting: false}, () => this.showError(I18n.t(data.error)));\r\n                } else {\r\n                    this.setState({messageText: data.result, requesting: false});\r\n                }\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        return <form key=\"option\" className={ this.props.classes.tab }>\r\n            <Logo\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            { this.renderSettings() }\r\n            <br/>\r\n            { this.renderHint() }\r\n            { this.renderToast() }\r\n            { this.renderMessage() }\r\n            { this.renderError() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onConfigError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    getIpAddresses: PropTypes.func,\r\n    getExtendableInstances: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    page: {\r\n        width: '100%'\r\n    },\r\n    url: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nclass Config extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const state = JSON.parse(JSON.stringify(this.props.settings));\r\n        // set default values\r\n        state.url      = state.url || '';\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    render() {\r\n        return <div className={this.props.classes.page}>\r\n            <TextField\r\n                key=\"url\"\r\n                className={this.props.classes.url}\r\n                label={I18n.t('Camera URL')}\r\n                value={this.state.url}\r\n                onChange={e => {\r\n                    this.setState({url: e.target.value}, () =>\r\n                        this.props.onChange({\r\n                            url: this.state.url\r\n                        }));\r\n                }}\r\n            />\r\n        </div>;\r\n    }\r\n}\r\n\r\nConfig.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    defaultTimeout: PropTypes.number,\r\n    settings: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Config);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    page: {\r\n        width: '100%'\r\n    },\r\n    url: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nclass Config extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const state = JSON.parse(JSON.stringify(this.props.settings));\r\n\r\n        // set default values\r\n        state.url      = state.url || '';\r\n        state.password = state.password || '';\r\n        state.username = state.username || '';\r\n        state.timeout  = state.timeout  || 1000;\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.decrypt(this.state.password,\r\n            password => this.setState({password}));\r\n    }\r\n\r\n    reportSettings() {\r\n        this.props.encrypt(this.state.password, password => {\r\n            this.props.onChange({\r\n                url:      this.state.url,\r\n                username: this.state.username,\r\n                password: password\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className={this.props.classes.page}>\r\n            <TextField\r\n                key=\"url\"\r\n                className={this.props.classes.url}\r\n                label={I18n.t('Camera URL')}\r\n                value={this.state.url}\r\n                onChange={e => this.setState({url: e.target.value}, () => this.reportSettings())}\r\n            />\r\n            <br/>\r\n            <TextField\r\n                key=\"username\"\r\n                autoComplete=\"off\"\r\n                className={this.props.classes.username}\r\n                label={I18n.t('Username')}\r\n                value={this.state.username}\r\n                onChange={e => this.setState({username: e.target.value}, () => this.reportSettings())}\r\n            />\r\n            <br/>\r\n            <TextField\r\n                key=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                className={this.props.classes.password}\r\n                label={I18n.t('Password')}\r\n                value={this.state.password}\r\n                onChange={e => this.setState({password: e.target.value}, () => this.reportSettings())}\r\n            />\r\n        </div>;\r\n    }\r\n}\r\n\r\nConfig.propTypes = {\r\n    onChange: PropTypes.func,\r\n    defaultTimeout: PropTypes.number,\r\n    decode: PropTypes.func,\r\n    encode: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(Config);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport IconDelete from '@material-ui/icons/Delete';\r\nimport IconEdit from '@material-ui/icons/Edit';\r\nimport IconAdd from '@material-ui/icons/Add';\r\nimport IconUp from '@material-ui/icons/ArrowUpward';\r\nimport IconDown from '@material-ui/icons/ArrowDownward';\r\nimport IconTest from '@material-ui/icons/Camera';\r\n\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport URLImage from '../Types/URLImage';\r\nimport URLBasicAuthImage from '../Types/URLBasicAuthImage';\r\n\r\nconst TYPES = {\r\n    url:          {Config: URLImage, name: 'URL'},\r\n    urlBasicAuth: {Config: URLBasicAuthImage, name: 'URL with basic auth'},\r\n};\r\n\r\nconst COMMON_ATTRS = ['name', 'desc', 'type'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    lineDiv: {\r\n        width: '100%',\r\n        paddingBottom: 5,\r\n        borderBottom: '1px dashed gray'\r\n    },\r\n    lineText: {\r\n        display: 'inline-block',\r\n        width: 200,\r\n    },\r\n    lineDesc: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 600px)',\r\n    },\r\n    lineType: {\r\n        display: 'inline-block',\r\n        width: 200,\r\n    },\r\n    lineEdit: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineUp: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineDown: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineDelete: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineUrl: {\r\n        marginLeft: 200,\r\n        opacity: 0.5,\r\n        fontSize: 'small',\r\n        fontStyle: 'italic',\r\n    },\r\n    type: {\r\n        width: '100%'\r\n    },\r\n    name: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    desc: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    lineNoButtonUp: {\r\n        display: 'inline-block',\r\n        width: 40,\r\n        marginLeft: 10,\r\n    },\r\n    lineNoButtonDown: {\r\n        display: 'inline-block',\r\n        width: 40,\r\n        marginLeft: 10,\r\n    },\r\n    divConfig: {\r\n        verticalAlign: 'top',\r\n        width: 'calc(100% - 300px)',\r\n        display: 'inline-block'\r\n    },\r\n    divTestCam: {\r\n        width: 300,\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n    },\r\n    buttonIcon: {\r\n        marginTop: 6,\r\n    },\r\n    buttonTest: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    imgTest: {\r\n        width: '100%',\r\n        height: 'auto'\r\n    },\r\n    sampleUrl: {\r\n        display: 'block',\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass Server extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editCam: false,\r\n            editChanged: false,\r\n            requesting: false,\r\n            instanceAlive: this.props.instanceAlive,\r\n            webInstanceHost: ''\r\n        };\r\n\r\n        // translate all names once\r\n        Object.keys(TYPES).forEach(type => {\r\n            if (TYPES[type].name && !TYPES[type].translated) {\r\n                TYPES[type].translated = true;\r\n                TYPES[type].name = I18n.t(TYPES[type].name);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWebInstances();\r\n    }\r\n\r\n    getWebInstances() {\r\n        this.props.socket.getAdapterInstances('web')\r\n            .then(list => {\r\n                let webInstance = null;\r\n                if (this.props.native.webInstance === '*') {\r\n                    webInstance = list[Object.keys(list)[0]];\r\n                } else {\r\n                    const id = Object.keys(list).find(id => id.endsWith(this.props.native.webInstance));\r\n                    webInstance = list[id];\r\n                }\r\n                if (webInstance) {\r\n                    webInstance.native = webInstance.native || {};\r\n                }\r\n                if (!webInstance.native.bind || webInstance.native.bind === '0.0.0.0') {\r\n                    // get current host\r\n                    // get ips on this host\r\n                    // but for now\r\n                    webInstance.native.bind = window.location.hostname;\r\n                }\r\n\r\n                webInstance && this.setState({ webInstanceHost: webInstance.native.bind  + ':' + (webInstance.native.port || 8082)});\r\n            });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return <MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.instanceAlive !== props.instanceAlive) {\r\n            return {instanceAlive: props.instanceAlive};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onTest() {\r\n        const settings = JSON.parse(this.editedSettings || this.editedSettingsOld);\r\n        COMMON_ATTRS.forEach(attr => settings[attr] = this.props.native.cameras[this.state.editCam][attr]);\r\n\r\n        let timeout = setTimeout(() => {\r\n            timeout = null;\r\n            this.setState({message: 'Timeout', requesting: false});\r\n        }, settings.timeout || this.props.native.defaultTimeout);\r\n\r\n        this.setState({requesting: true}, () => {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'test', settings, result => {\r\n                timeout && clearTimeout(timeout);\r\n                if (!result || !result.body || result.error) {\r\n                    let error = (result && result.error) ? result.error : I18n.t('No answer');\r\n                    if (typeof error !== 'string') {\r\n                        error = JSON.stringify(error);\r\n                    }\r\n                    this.setState({message: error, requesting: false});\r\n                } else {\r\n                    this.setState({testImg: result.body, requesting: false});\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    renderConfigDialog() {\r\n        if (this.state.editCam !== false) {\r\n            const cam = this.props.native.cameras[this.state.editCam];\r\n            let Config = (TYPES[cam.type] || TYPES.url).Config;\r\n\r\n            return <Dialog\r\n                maxWidth=\"lg\"\r\n                fullWidth={true}\r\n                open={true}\r\n                onClose={() => this.state.editCam !== null && this.setState({editCam: false, editChanged: false})}\r\n            >\r\n                <DialogTitle>{I18n.t('Edit camera %s [%s]', cam.name, cam.type)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className={this.props.classes.divConfig}>\r\n                        <Config\r\n                            settings={cam}\r\n                            onChange={settings => {\r\n                                this.editedSettings = JSON.stringify(settings);\r\n                                if (this.editedSettingsOld === this.editedSettings && this.state.editChanged) {\r\n                                    this.setState({editChanged: false});\r\n                                } else if (this.editedSettingsOld !== this.editedSettings && !this.state.editChanged) {\r\n                                    this.setState({editChanged: true});\r\n                                }\r\n                            }}\r\n                            encrypt={(value, cb) =>\r\n                                this.props.encrypt(value, cb)}\r\n                            decrypt={(value, cb) =>\r\n                                this.props.decrypt(value, cb)}\r\n                        />\r\n                        <div className={ this.props.classes.sampleUrl } >{ I18n.t('Local URL') }: <a href={ `http://${this.props.native.bind}:${this.props.native.port}/${cam.name}?key=${ this.props.native.key }` } target=\"_blank\" rel=\"noopener noreferrer\">URL: http://{ this.props.native.bind }:{this.props.native.port }/{ cam.name }?key={ this.props.native.key }</a></div>\r\n                        <div className={ this.props.classes.sampleUrl } >{ I18n.t('Web URL') }: <a href={ `http://${this.state.webInstanceHost}/${this.props.adapterName}.${this.props.instance}/${cam.name}` } target=\"_blank\" rel=\"noopener noreferrer\">URL: http://{ this.state.webInstanceHost }/{ this.props.adapterName }.{ this.props.instance }/{ cam.name }</a></div>\r\n                    </div>\r\n                <div className={this.props.classes.divTestCam}>\r\n                    <Button\r\n                        disabled={this.state.requesting || !this.state.instanceAlive}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={this.props.classes.buttonTest}\r\n                        onClick={() => this.onTest()}\r\n                        startIcon={<IconTest />}\r\n                    >{I18n.t('Test')}</Button>\r\n                    {this.state.testImg ? (<img alt=\"test\" className={this.props.classes.imgTest} src={this.state.testImg} />) : null}\r\n                </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        disabled={!this.state.editChanged}\r\n                        onClick={() => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        if (this.editedSettings) {\r\n                            const oldValue = cameras[this.state.editCam];\r\n                            cameras[this.state.editCam] = JSON.parse(this.editedSettings);\r\n                            COMMON_ATTRS.forEach(attr => cameras[this.state.editCam][attr] = oldValue[attr]);\r\n                            this.props.onChange('cameras', cameras, () => this.setState({editCam: false, editChanged: false}));\r\n                        } else {\r\n                            this.setState({editCam: false, editChanged: false});\r\n                        }\r\n                    }} color=\"primary\" >{I18n.t('Apply')}</Button>\r\n                    <Button onClick={() => this.setState({editCam: false, editChanged: false})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderCameraButtons(cam, i) {\r\n        return [\r\n            <Fab\r\n                size=\"small\"\r\n                key=\"edit\"\r\n                className={this.props.classes.lineEdit}\r\n                onClick={() => {\r\n                    this.editedSettingsOld = JSON.parse(JSON.stringify(this.props.native.cameras[i]));\r\n                    COMMON_ATTRS.forEach(attr => {\r\n                        console.log('delete ' + attr);\r\n                        delete this.editedSettingsOld[attr];\r\n                    });\r\n                    this.editedSettingsOld = JSON.stringify(this.editedSettingsOld);\r\n                    this.setState({editCam: i});\r\n                }}>\r\n                    <IconEdit className={ this.props.classes.buttonIcon }/>\r\n            </Fab>,\r\n\r\n            i ?\r\n                <Fab\r\n                    size=\"small\"\r\n                    key=\"up\"\r\n                    className={this.props.classes.lineUp}\r\n                    onClick={() => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        const cam = cameras[i];\r\n                        cameras.splice(i, 1);\r\n                        cameras.splice(i - 1, 0, cam);\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}>\r\n                    <IconUp className={ this.props.classes.buttonIcon }/>\r\n                </Fab>\r\n                :\r\n                <div key=\"upEmpty\" className={this.props.classes.lineNoButtonUp}>&nbsp;</div>,\r\n\r\n            i !== this.props.native.cameras.length - 1 ?\r\n                <Fab\r\n                    size=\"small\"\r\n                    key=\"down\"\r\n                    className={this.props.classes.lineDown}\r\n                    onClick={() => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        const cam = cameras[i];\r\n                        cameras.splice(i, 1);\r\n                        cameras.splice(i + 1, 0, cam);\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}>\r\n                    <IconDown  className={ this.props.classes.buttonIcon }/>\r\n                </Fab>\r\n                :\r\n                <div key=\"downEmpty\" className={this.props.classes.lineNoButtonDown}>&nbsp;</div>,\r\n\r\n            <Fab\r\n                size=\"small\"\r\n                key=\"delete\"\r\n                className={this.props.classes.lineDelete}\r\n                onClick={() => {\r\n                    const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                    cameras.splice(i, 1);\r\n                    this.props.onChange('cameras', cameras);\r\n                }}>\r\n                    <IconDelete className={ this.props.classes.buttonIcon }/>\r\n            </Fab>\r\n        ];\r\n    }\r\n\r\n    renderCamera(cam, i) {\r\n        const error = this.props.native.cameras.find((c, ii) => c.name === cam.name && ii !== i);\r\n        this.props.native.cameras.forEach((cam, i) => {\r\n            if (!cam.id) {\r\n                cam.id = Date.now() + i;\r\n            }\r\n        });\r\n\r\n        let description = cam.url || '';\r\n        if (description) {\r\n            // remove password\r\n            const m = description.match(/^https?:\\/\\/([^@]+)@/);\r\n            if (m && m[1]) {\r\n                description = description.replace(m[1] + '@', '');\r\n            }\r\n        }\r\n\r\n        return (<div key={ 'cam' + cam.id } className={ this.props.classes.lineDiv }>\r\n            <div className={ this.props.classes.lineText }>\r\n                <TextField\r\n                    className={ this.props.classes.name }\r\n                    label={ I18n.t('Name') }\r\n                    error={ error }\r\n                    value={ cam.name }\r\n                    helperText={ error ? I18n.t('Duplicate name') : '' }\r\n                    onChange={ e => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        cameras[i].name = e.target.value.replace(/[^-_\\da-zA-Z]/g, '_');\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={ this.props.classes.lineDesc }>\r\n                <TextField\r\n                    className={this.props.classes.desc}\r\n                    label={I18n.t('Description')}\r\n                    value={cam.desc}\r\n                    onChange={e => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        cameras[i].desc = e.target.value;\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={this.props.classes.lineType}>\r\n                <FormControl className={this.props.classes.type}>\r\n                    <InputLabel>{I18n.t('Type')}</InputLabel>\r\n                    <Select\r\n                        value={cam.type}\r\n                        onChange={e => {\r\n                            const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                            cameras[i].type = e.target.value;\r\n                            this.props.onChange('cameras', cameras);\r\n                        }}\r\n                    >\r\n                        {Object.keys(TYPES).map(type => (<MenuItem key={ type } value={ type }>{TYPES[type].name || type}</MenuItem>))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            { this.renderCameraButtons(cam, i) }\r\n            {description ? <div className={ this.props.classes.lineUrl }>{ description }</div> : null }\r\n        </div>);\r\n    }\r\n\r\n    render() {\r\n        return <div className={this.props.classes.tab}>\r\n            <Fab size=\"small\" onClick={() => {\r\n                const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                let i = 1;\r\n                // eslint-disable-next-line\r\n                while(cameras.find(cam => cam.name === 'cam' + i)) {\r\n                    i++;\r\n                }\r\n                cameras.push({name: 'cam' + i, type: 'url', id: Date.now()});\r\n                this.props.onChange('cameras', cameras);\r\n            }}><IconAdd /></Fab>\r\n            { this.props.native.cameras ? this.props.native.cameras.map((cam, i) => this.renderCamera(cam, i)) : null }\r\n            { this.renderConfigDialog() }\r\n            { this.renderMessage() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nServer.propTypes = {\r\n    decrypt: PropTypes.func.isRequired,\r\n    encrypt: PropTypes.func.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Server);\r\n","import React from 'react';\r\nimport { withStyles} from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabCameras from './Tabs/Cameras';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {};\r\n        extendedProps.encryptedFields = ['password'];\r\n        extendedProps.adapterName = 'cameras';\r\n        extendedProps.doNotLoadAllObjects = true;\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        if (id) {\r\n            if (this.state.alive !== (state ? state.val : false)) {\r\n                this.setState({alive: state ? state.val : false});\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.socket.unsubscribeState(this.instanceId + '.alive', this.onAliveChanged);\r\n    }\r\n    componentWillUnmount() {\r\n        this.socket.unsubscribeState(this.instanceId + '.alive', this.onAliveChanged);\r\n        super.componentWillUnmount();\r\n    }\r\n\r\n    // called when connected with admin and loaded instance object\r\n    onConnectionReady() {\r\n        this.socket.getState(this.instanceId + '.alive')\r\n            .then(state => {\r\n                if (this.state.alive !== (state ? state.val : false)) {\r\n                    this.setState({alive: state ? state.val : false});\r\n                }\r\n\r\n                // generate random key\r\n                if (!this.state.native.key) {\r\n                    setTimeout(() => this.updateNativeValue('key', (Math.round(Math.random() * 100000000000) / 100000).toFixed(6)));\r\n                }\r\n            });\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'cameras') {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <Loader theme={this.state.themeType}/>;\r\n        }\r\n\r\n        return <div className=\"App\" style={{background: this.state.themeType === 'dark' ? 'black' : 'white'}}>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                    <Tab selected={this.state.selectedTab === 'options'} label={I18n.t('Options')} data-name=\"options\" />\r\n                    <Tab selected={this.state.selectedTab === 'cameras'} label={I18n.t('Cameras')} data-name=\"cameras\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    encrypt={(value, cb) => cb(this.encrypt(value))}\r\n                    decrypt={(value, cb) => cb(this.decrypt(value))}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    theme={this.state.theme}\r\n                    getIpAddresses={() => this.socket.getIpAddresses(this.common.host)}\r\n                    getExtendableInstances={() => this.getExtendableInstances()}\r\n                    onConfigError={configError => this.setConfigurationError(configError)}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'cameras' && <TabCameras\r\n                    key=\"cameras\"\r\n                    theme={this.state.theme}\r\n                    socket={this.socket}\r\n                    adapterName={ this.adapterName }\r\n                    instance={this.instance}\r\n                    encrypt={(value, cb) => cb(this.encrypt(value))}\r\n                    decrypt={(value, cb) => cb(this.decrypt(value))}\r\n                    instanceAlive={this.state.alive}\r\n                    native={this.state.native}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderError()}\r\n            {this.renderSaveCloseButtons()}\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { version } from '../package.json';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport '@iobroker/adapter-react/index.css';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\nimport App from './App';\r\n\r\nwindow.adapterName = 'cameras';\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version);\r\nlet themeName = Utils.getThemeName();\r\n\r\nfunction build() {\r\n    return ReactDOM.render(<MuiThemeProvider theme={theme(themeName)}>\r\n        <App onThemeChange={_themeName => {\r\n            themeName = _themeName;\r\n            build();\r\n        }} />\r\n    </MuiThemeProvider>, document.getElementById('root'));\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}