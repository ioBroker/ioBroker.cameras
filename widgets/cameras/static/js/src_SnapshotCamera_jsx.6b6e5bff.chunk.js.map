{"version":3,"file":"static/js/src_SnapshotCamera_jsx.6b6e5bff.chunk.js","mappings":"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","sources":["Generic.jsx","RtspCamera.jsx","SnapshotCamera.jsx","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nclass Generic extends window.visRxWidget {\n    static getI18nPrefix() {\n        return 'cameras_';\n    }\n}\n\nGeneric.propTypes = {\n    context: PropTypes.object,\n    themeType: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object,\n};\n\nexport default Generic;\n","import React, { useEffect } from 'react';\nimport {\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    MenuItem,\n    Select,\n} from '@mui/material';\n\nimport { Close } from '@mui/icons-material';\n\nimport Generic from './Generic';\n\nconst styles = {\n    camera: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain',\n        cursor: 'pointer',\n    },\n    fullCamera: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain',\n    },\n    imageContainer: {\n        flex: 1,\n        overflow: 'hidden',\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n    },\n};\n\nexport const CameraField = props => {\n    const [cameras, setCameras] = React.useState(null);\n    const [camera, setCamera] = React.useState(props.data[props.field.name] || '');\n\n    useEffect(() => {\n        (async () => {\n            const _cameras = [];\n            const instances = await props.context.socket.getAdapterInstances('cameras');\n            instances.forEach(instance => {\n                const instanceId = instance._id.split('.').pop();\n                instance.native.cameras\n                    .filter(iCamera => !props.rtsp || iCamera.type === 'rtsp' || iCamera.rtsp)\n                    .forEach(iCamera => {\n                        _cameras.push({\n                            enabled: iCamera.enabled !== false,\n                            value: `${instanceId}/${iCamera.name}`,\n                            label: `cameras.${instanceId}/${iCamera.name}`,\n                            subLabel: iCamera.desc ? `${iCamera.desc}/${iCamera.ip}` : iCamera.ip || '',\n                        });\n                    });\n            });\n            setCameras(_cameras);\n        })();\n    }, [props.context.socket, props.rtsp]);\n\n    return cameras ? (\n        <Select\n            fullWidth\n            variant=\"standard\"\n            value={camera}\n            onChange={e => {\n                props.setData({ [props.field.name]: e.target.value });\n                setCamera(e.target.value);\n            }}\n        >\n            {cameras.map(iCamera => (\n                <MenuItem\n                    key={iCamera.value}\n                    value={iCamera.value}\n                    style={{ display: 'block', opacity: iCamera.enabled ? 1 : 0.5 }}\n                >\n                    <div>{iCamera.label}</div>\n                    <div style={{ fontSize: 10, fontStyle: 'italic', opacity: 0.7 }}>{iCamera.subLabel}</div>\n                    {!iCamera.enabled ? (\n                        <div\n                            style={{\n                                fontSize: 10,\n                                fontStyle: 'italic',\n                                opacity: 0.7,\n                                color: 'red',\n                            }}\n                        >\n                            {Generic.t('disabled')}\n                        </div>\n                    ) : null}\n                </MenuItem>\n            ))}\n        </Select>\n    ) : (\n        <CircularProgress />\n    );\n};\n\nclass RtspCamera extends Generic {\n    constructor(props) {\n        super(props);\n        this.videoInterval = null;\n        this.videoRef = React.createRef();\n        this.fullVideoRef = React.createRef();\n        this.currentCam = null;\n        this.state.full = false;\n        this.state.alive = false;\n    }\n\n    static getWidgetInfo() {\n        return {\n            id: 'tplCameras2RtspCamera',\n            visSet: 'cameras',\n            visName: 'RTSP Camera',\n            visWidgetLabel: 'RTSP Camera',\n            visWidgetSetLabel: 'Cameras',\n            visSetLabel: 'Cameras',\n            visSetColor: '#9f0026',\n            visAttrs: [\n                {\n                    name: 'common',\n                    fields: [\n                        {\n                            name: 'noCard',\n                            label: 'without_card',\n                            type: 'checkbox',\n                        },\n                        {\n                            name: 'widgetTitle',\n                            label: 'name',\n                            hidden: '!!data.noCard',\n                        },\n                        {\n                            name: 'width',\n                            label: 'videoWidth',\n                            type: 'number',\n                            tooltip: 'tooltip_videoWidth',\n                        },\n                        {\n                            label: 'Camera',\n                            name: 'camera',\n                            type: 'custom',\n                            component: (field, data, setData, props) => (\n                                <CameraField\n                                    field={field}\n                                    rtsp\n                                    data={data}\n                                    setData={setData}\n                                    context={props.context}\n                                />\n                            ),\n                        },\n                    ],\n                },\n            ],\n            visDefaultStyle: {\n                width: '100%',\n                height: 240,\n                position: 'relative',\n            },\n            visPrev: 'widgets/cameras/img/prev_camera.png',\n        };\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getWidgetInfo() {\n        return RtspCamera.getWidgetInfo();\n    }\n\n    static drawCamera(ref, data) {\n        const canvas = ref.current;\n        if (!canvas) {\n            return;\n        }\n        const context = canvas.getContext('2d');\n        try {\n            const imageObj = new Image();\n            imageObj.src = `data:image/jpeg;base64,${data}`;\n            imageObj.onload = () => {\n                canvas.width = imageObj.width;\n                canvas.height = imageObj.height;\n                // const hRatio = canvas.width  / imageObj.width;\n                // const vRatio = canvas.height / imageObj.height;\n                // const ratio  = Math.min(hRatio, vRatio);\n                // const centerShiftX = (canvas.width - imageObj.width * ratio) / 2;\n                // const centerShiftY = (canvas.height - imageObj.height * ratio) / 2;\n                // context.clearRect(0, 0, canvas.width, canvas.height);\n                context.drawImage(\n                    imageObj,\n                    0,\n                    0,\n                    imageObj.width,\n                    imageObj.height,\n                    // centerShiftX,\n                    // centerShiftY,\n                    // imageObj.width * ratio,\n                    // imageObj.height * ratio,\n                );\n            };\n            imageObj.onerror = e => {\n                console.error(e);\n            };\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    updateStream = (id, state) => {\n        if (state?.val) {\n            if (this.state.loading) {\n                this.setState({ loading: false });\n            }\n\n            RtspCamera.drawCamera(this.videoRef, state.val);\n\n            if (this.state.full) {\n                RtspCamera.drawCamera(this.fullVideoRef, state.val);\n            }\n        }\n    };\n\n    static getNameAndInstance(value) {\n        if (!value) {\n            return null;\n        }\n        const pos = value.indexOf('/');\n        if (pos === -1) {\n            return null;\n        }\n        return {\n            instanceId: value.substring(0, pos),\n            name: value.substring(pos + 1),\n        };\n    }\n\n    onCameras = data => {\n        if (data) {\n            // if it is success or error object\n            if (typeof data === 'object' && (data.accepted || data.error)) {\n                if (data.error) {\n                    console.error(data.error);\n                }\n                return;\n            }\n\n            if (this.state.loading) {\n                this.setState({ loading: false });\n            }\n\n            RtspCamera.drawCamera(this.videoRef, data);\n\n            if (this.state.full) {\n                RtspCamera.drawCamera(this.fullVideoRef, data);\n            }\n        }\n    };\n\n    async propertiesUpdate() {\n        if (this.useMessages === undefined) {\n            this.useMessages = await this.props.context.socket.checkFeatureSupported('INSTANCE_MESSAGES');\n        }\n        if (this.state.rxData.camera !== this.currentCam) {\n            // check if camera instance is alive\n            if (this.state.alive) {\n                // this.width = this.getImageWidth();\n                // if we were subscribed, unsubscribe\n                if (this.currentCam) {\n                    const { instanceId, name } = RtspCamera.getNameAndInstance(this.currentCam);\n                    if (this.useMessages) {\n                        await this.props.context.socket.unsubscribeFromInstance(\n                            `cameras.${instanceId}`,\n                            `startCamera/${name}`,\n                            this.onCameras,\n                        );\n                    } else {\n                        // Bluefox 2023.09.28: delete this branch after js-controller 5.0.13 will be mainstream\n                        await this.props.context.socket.setState(`cameras.${instanceId}.${name}.running`, {\n                            val: false,\n                        });\n                        await this.props.context.socket.unsubscribeState(\n                            `cameras.${instanceId}.${name}.stream`,\n                            this.updateStream,\n                        );\n                    }\n                }\n\n                // subscribe on new camera\n                if (this.state.rxData.camera) {\n                    this.setState({ loading: true });\n                    const { instanceId, name } = RtspCamera.getNameAndInstance(this.state.rxData.camera);\n                    if (this.useMessages) {\n                        await this.props.context.socket.subscribeOnInstance(\n                            `cameras.${instanceId}`,\n                            `startCamera/${name}`,\n                            { width: this.getImageWidth() },\n                            this.onCameras,\n                        );\n                    } else {\n                        await this.props.context.socket.subscribeState(\n                            `cameras.${instanceId}.${name}.stream`,\n                            this.updateStream,\n                        );\n                    }\n                } else {\n                    const canvas = this.videoRef.current;\n                    if (canvas) {\n                        const context = canvas.getContext('2d');\n                        context.clearRect(0, 0, canvas.width, canvas.height);\n                    }\n                }\n                this.currentCam = this.state.rxData.camera;\n            } else if (this.currentCam) {\n                // not alive\n                const { instanceId, name } = RtspCamera.getNameAndInstance(this.currentCam);\n                if (!this.useMessages) {\n                    await this.props.context.socket.setState(`cameras.${instanceId}.${name}.running`, { val: false });\n                    await this.props.context.socket.unsubscribeState(\n                        `cameras.${instanceId}.${name}.stream`,\n                        this.updateStream,\n                    );\n                }\n                this.currentCam = null;\n            }\n        } else if (this.currentCam && this.state.alive) {\n            // refresh stream\n            const { instanceId, name } = RtspCamera.getNameAndInstance(this.currentCam);\n            if (this.useMessages) {\n                await this.props.context.socket.subscribeOnInstance(\n                    `cameras.${instanceId}`,\n                    `startCamera/${name}`,\n                    { width: this.getImageWidth() },\n                    this.onCameras,\n                );\n            } else {\n                await this.props.context.socket.setState(`cameras.${instanceId}.${name}.running`, {\n                    val: true,\n                    expire: 30, // expire in 30 seconds\n                });\n            }\n        } else if (this.currentCam && !this.state.alive) {\n            // not alive\n            const { instanceId, name } = RtspCamera.getNameAndInstance(this.currentCam);\n            if (!this.useMessages) {\n                await this.props.context.socket.setState(`cameras.${instanceId}.${name}.running`, { val: false });\n                await this.props.context.socket.unsubscribeState(\n                    `cameras.${instanceId}.${name}.stream`,\n                    this.updateStream,\n                );\n            }\n            this.currentCam = null;\n        }\n    }\n\n    getImageWidth(isFull) {\n        isFull = isFull === undefined ? this.state.full : isFull;\n        // if (parseInt(this.state.rxData.width, 10)) {\n        //    return parseInt(this.state.rxData.width, 10);\n        // }\n        if (isFull && this.fullVideoRef.current) {\n            return this.fullVideoRef.current.parentElement.clientWidth || 0;\n        }\n\n        return this.videoRef.current?.parentElement.clientWidth || 0;\n    }\n\n    async subscribeOnAlive() {\n        const data = RtspCamera.getNameAndInstance(this.state.rxData.camera);\n\n        if (this.subsribedOnAlive !== (data ? data.instanceId : null)) {\n            if (this.subsribedOnAlive) {\n                this.props.context.socket.unsubscribeState(\n                    `system.adapter.cameras.${this.subsribedOnAlive}.alive`,\n                    this.onAliveChanged,\n                );\n                this.subsribedOnAlive = '';\n            }\n            if (data) {\n                this.props.context.socket.subscribeState(\n                    `system.adapter.cameras.${data.instanceId}.alive`,\n                    this.onAliveChanged,\n                );\n                this.subsribedOnAlive = data.instanceId;\n            }\n        }\n    }\n\n    onAliveChanged = (id, state) => {\n        const data = RtspCamera.getNameAndInstance(this.state.rxData.camera);\n        if (data && id === `system.adapter.cameras.${data.instanceId}.alive`) {\n            const alive = !!state?.val;\n            if (alive !== this.state.alive) {\n                this.setState({ alive }, () => this.propertiesUpdate());\n            }\n        }\n    };\n\n    componentDidMount() {\n        super.componentDidMount();\n        setTimeout(() => this.propertiesUpdate(), 100);\n\n        this.subscribeOnAlive();\n\n        this.videoInterval = setInterval(() => this.propertiesUpdate(), 14000);\n    }\n\n    async onRxDataChanged(/* prevRxData */) {\n        await this.subscribeOnAlive();\n        await this.propertiesUpdate();\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.videoInterval && clearInterval(this.videoInterval);\n        this.videoInterval = null;\n\n        if (this.subsribedOnAlive) {\n            this.props.context.socket.unsubscribeState(\n                `system.adapter.cameras.${this.subsribedOnAlive}.alive`,\n                this.onAliveChanged,\n            );\n            this.subsribedOnAlive = null;\n        }\n\n        if (this.currentCam) {\n            const { instanceId, name } = RtspCamera.getNameAndInstance(this.currentCam);\n            if (this.useMessages) {\n                this.props.context.socket\n                    .unsubscribeFromInstance(`cameras.${instanceId}`, `startCamera/${name}`, this.onCameras)\n                    .catch(e => console.error(e));\n            }\n        }\n    }\n\n    renderDialog() {\n        return this.state.full ? (\n            <Dialog\n                fullWidth\n                maxWidth=\"lg\"\n                open={!0}\n                onClose={() => this.setState({ full: false })}\n            >\n                <DialogTitle>{this.state.rxData.widgetTitle}</DialogTitle>\n                <DialogContent>\n                    <div style={styles.imageContainer}>\n                        <canvas\n                            ref={this.fullVideoRef}\n                            style={styles.fullCamera}\n                        ></canvas>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={e => {\n                            e.stopPropagation();\n                            e.preventDefault();\n                            this.setState({ full: false });\n                        }}\n                        startIcon={<Close />}\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        {Generic.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n    }\n\n    renderWidgetBody(props) {\n        super.renderWidgetBody(props);\n\n        const content = (\n            <div\n                style={styles.imageContainer}\n                onClick={() => this.setState({ full: true })}\n            >\n                {this.state.loading && this.state.alive && <CircularProgress style={styles.progress} />}\n                {!this.state.alive ? (\n                    <div style={{ position: 'absolute', top: 0, left: 0 }}>\n                        {Generic.t('Camera instance %s inactive', (this.state.rxData.camera || '').split('/')[0])}\n                    </div>\n                ) : null}\n                <canvas\n                    ref={this.videoRef}\n                    style={styles.camera}\n                ></canvas>\n                {this.renderDialog()}\n            </div>\n        );\n\n        if (this.state.rxData.noCard || props.widget.usedInWidget) {\n            return content;\n        }\n\n        return this.wrapContent(content, null, {\n            boxSizing: 'border-box',\n            paddingBottom: 10,\n            height: '100%',\n        });\n    }\n}\n\nexport default RtspCamera;\n","import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from '@mui/material';\n\nimport { Close } from '@mui/icons-material';\n\nimport Generic from './Generic';\nimport { CameraField } from './RtspCamera';\n\nconst styles = {\n    camera: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain',\n        cursor: 'pointer',\n    },\n    fullCamera: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain',\n    },\n    imageContainer: {\n        flex: 1,\n        overflow: 'hidden',\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n    },\n};\n\nclass SnapshotCamera extends Generic {\n    constructor(props) {\n        super(props);\n        this.videoInterval = null;\n        this.videoRef = React.createRef();\n        this.fullVideoRef = React.createRef();\n        this.currentCam = null;\n        this.state.full = false;\n        this.state.alive = false;\n        this.state.error = false;\n    }\n\n    static getWidgetInfo() {\n        return {\n            id: 'tplCameras2SnapshotCamera',\n            visSet: 'cameras',\n            visName: 'Polling Camera',\n            visWidgetLabel: 'Polling Camera',\n            visAttrs: [\n                {\n                    name: 'common',\n                    fields: [\n                        {\n                            name: 'noCard',\n                            label: 'without_card',\n                            type: 'checkbox',\n                        },\n                        {\n                            name: 'widgetTitle',\n                            label: 'name',\n                            hidden: '!!data.noCard',\n                        },\n                        {\n                            name: 'pollingInterval',\n                            label: 'pollingInterval',\n                            tooltip: 'tooltip_ms',\n                            type: 'number',\n                            default: 500,\n                        },\n                        {\n                            name: 'pollingIntervalFull',\n                            label: 'pollingIntervalFull',\n                            tooltip: 'tooltip_ms',\n                            type: 'number',\n                            default: 300,\n                        },\n                        {\n                            name: 'noCacheByFull',\n                            label: 'noCacheByFull',\n                            type: 'checkbox',\n                        },\n                        {\n                            name: 'rotate',\n                            label: 'rotate',\n                            type: 'select',\n                            noTranslation: true,\n                            options: [\n                                { value: 0, label: '0°' },\n                                { value: 90, label: '90°' },\n                                { value: 180, label: '180°' },\n                                { value: 270, label: '270°' },\n                            ],\n                        },\n                        {\n                            label: 'Camera',\n                            name: 'camera',\n                            type: 'custom',\n                            component: (field, data, setData, props) => (\n                                <CameraField\n                                    field={field}\n                                    data={data}\n                                    setData={setData}\n                                    context={props.context}\n                                />\n                            ),\n                        },\n                        {\n                            label: 'camera_in_dialog',\n                            name: 'bigCamera',\n                            type: 'custom',\n                            component: (field, data, setData, props) => (\n                                <CameraField\n                                    field={field}\n                                    data={data}\n                                    setData={setData}\n                                    context={props.context}\n                                />\n                            ),\n                            hidden: '!data.camera',\n                        },\n                    ],\n                },\n            ],\n            visDefaultStyle: {\n                width: '100%',\n                height: 240,\n                position: 'relative',\n            },\n            visPrev: 'widgets/cameras/img/prev_snapshot.png',\n        };\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    getWidgetInfo() {\n        return SnapshotCamera.getWidgetInfo();\n    }\n\n    static getNameAndInstance(value) {\n        if (!value) {\n            return null;\n        }\n        const pos = value.indexOf('/');\n        if (pos === -1) {\n            return null;\n        }\n        return {\n            instanceId: value.substring(0, pos),\n            name: value.substring(pos + 1),\n        };\n    }\n\n    getImageWidth(isFull) {\n        isFull = isFull === undefined ? this.state.full : isFull;\n        if (isFull && this.fullVideoRef.current) {\n            return this.fullVideoRef.current?.parentElement.clientWidth || 0;\n        }\n\n        return this.videoRef.current?.parentElement.clientWidth || 0;\n    }\n\n    async subscribeOnAlive() {\n        const data = SnapshotCamera.getNameAndInstance(this.state.rxData.camera);\n\n        if (this.subsribedOnAlive !== (data ? data.instanceId : null)) {\n            if (this.subsribedOnAlive) {\n                this.props.context.socket.unsubscribeState(\n                    `system.adapter.cameras.${this.subsribedOnAlive}.alive`,\n                    this.onAliveChanged,\n                );\n                this.subsribedOnAlive = '';\n            }\n            if (data) {\n                this.props.context.socket.subscribeState(\n                    `system.adapter.cameras.${data.instanceId}.alive`,\n                    this.onAliveChanged,\n                );\n                this.subsribedOnAlive = data.instanceId;\n            }\n        }\n    }\n\n    updateImage = () => {\n        if (!this.loading) {\n            this.loading = true;\n            if (this.videoRef.current) {\n                this.videoRef.current.src = this.getUrl();\n                this.videoRef.current.onload = e => {\n                    if (e.target && !e.target.style.opacity !== '1') {\n                        e.target.style.opacity = '1';\n                    }\n                    this.state.error && this.setState({ error: false });\n                    this.loading = false;\n                };\n                this.videoRef.current.onerror = e => {\n                    if (e.target && e.target.style.opacity !== '0') {\n                        e.target.style.opacity = '0';\n                    }\n                    !this.state.error && this.setState({ error: true });\n\n                    this.loading = false;\n                };\n            }\n            if (this.fullVideoRef.current && this.state.full) {\n                this.fullVideoRef.current.src = this.getUrl(true);\n            }\n        }\n    };\n\n    restartPollingInterval() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n            this.pollingInterval = null;\n        }\n        if (this.state.alive) {\n            this.pollingInterval = setInterval(\n                this.updateImage,\n                parseInt(\n                    this.state.full ? this.state.rxData.pollingIntervalFull : this.state.rxData.pollingInterval,\n                    10,\n                ) || 500,\n            );\n        }\n    }\n\n    onAliveChanged = (id, state) => {\n        const data = SnapshotCamera.getNameAndInstance(this.state.rxData.camera);\n        if (data && id === `system.adapter.cameras.${data.instanceId}.alive`) {\n            const alive = !!state?.val;\n            if (alive !== this.state.alive) {\n                this.setState({ alive }, () => this.restartPollingInterval());\n            }\n        }\n    };\n\n    componentDidMount() {\n        super.componentDidMount();\n\n        this.subscribeOnAlive();\n    }\n\n    async onRxDataChanged(/* prevRxData */) {\n        await this.subscribeOnAlive();\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        this.pollingInterval && clearInterval(this.pollingInterval);\n        this.pollingInterval = null;\n\n        if (this.subsribedOnAlive) {\n            this.props.context.socket.unsubscribeState(\n                `system.adapter.cameras.${this.subsribedOnAlive}.alive`,\n                this.onAliveChanged,\n            );\n            this.subsribedOnAlive = null;\n        }\n    }\n\n    renderDialog(url) {\n        if (this.state.full && this.state.rxData.bigCamera) {\n            url = this.getUrl(true) || url;\n        }\n\n        return this.state.full ? (\n            <Dialog\n                fullWidth\n                maxWidth=\"lg\"\n                open={!0}\n                onClose={() => this.setState({ full: false }, () => this.restartPollingInterval())}\n            >\n                <DialogTitle>{this.state.rxData.widgetTitle}</DialogTitle>\n                <DialogContent>\n                    <div style={styles.imageContainer}>\n                        <img\n                            src={url}\n                            ref={this.fullVideoRef}\n                            style={styles.fullCamera}\n                            alt={this.state.rxData.camera}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={e => {\n                            e.stopPropagation();\n                            e.preventDefault();\n                            this.setState({ full: false }, () => this.restartPollingInterval());\n                        }}\n                        startIcon={<Close />}\n                        color=\"primary\"\n                        variant=\"contained\"\n                    >\n                        {Generic.t('Close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n    }\n\n    getUrl(isFull) {\n        if (isFull && !this.state.rxData.bigCamera) {\n            const url = `../cameras.${this.state.rxData.bigCamera}?`;\n            const params = [\n                `ts=${Date.now()}`,\n                `w=${this.getImageWidth(true)}`,\n                `noCache=${this.state.rxData.noCacheByFull}`,\n                this.state.rxData.rotate ? `angle=${this.state.rxData.rotate}` : '',\n            ];\n            return url + params.filter(p => p).join('&');\n        }\n        if (this.state.rxData.camera) {\n            const url = `../cameras.${this.state.rxData.camera}?`;\n            const params = [\n                `ts=${Date.now()}`,\n                `w=${this.getImageWidth(isFull)}`,\n                `noCache=${isFull ? this.state.rxData.noCacheByFull : false}`,\n                this.state.rxData.rotate ? `angle=${this.state.rxData.rotate}` : '',\n            ];\n            return url + params.filter(p => p).join('&');\n        }\n\n        return '';\n    }\n\n    renderWidgetBody(props) {\n        super.renderWidgetBody(props);\n\n        const url = this.getUrl();\n\n        const content = (\n            <div\n                style={styles.imageContainer}\n                onClick={() => !this.state.error && this.setState({ full: true }, () => this.restartPollingInterval())}\n            >\n                {!this.state.alive ? (\n                    <div style={{ position: 'absolute', top: 20, left: 0 }}>\n                        {Generic.t('Camera instance %s inactive', (this.state.rxData.camera || '').split('/')[0])}\n                    </div>\n                ) : null}\n                {url ? (\n                    <img\n                        src={url}\n                        ref={this.videoRef}\n                        style={styles.camera}\n                        alt={this.state.rxData.camera}\n                    />\n                ) : (\n                    Generic.t('No camera selected')\n                )}\n                {this.state.alive && this.state.error ? (\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: 20,\n                            left: 0,\n                        }}\n                    >\n                        <div style={{ color: 'red' }}>\n                            {Generic.t('Cannot load URL')}\n                            :\n                        </div>\n                        <div>{this.getUrl(true)}</div>\n                    </div>\n                ) : null}\n                {this.renderDialog(url)}\n            </div>\n        );\n\n        if (this.state.rxData.noCard || props.widget.usedInWidget) {\n            return content;\n        }\n\n        return this.wrapContent(content, null, {\n            boxSizing: 'border-box',\n            paddingBottom: 10,\n            height: '100%',\n        });\n    }\n}\n\nexport default SnapshotCamera;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["Generic","window","visRxWidget","getI18nPrefix","propTypes","context","PropTypes","themeType","style","data","styles","camera","width","height","objectFit","cursor","fullCamera","imageContainer","flex","overflow","position","CameraField","props","cameras","setCameras","React","setCamera","field","name","useEffect","_cameras","socket","getAdapterInstances","forEach","instance","instanceId","_id","split","pop","native","filter","iCamera","rtsp","type","push","enabled","value","label","subLabel","desc","ip","_jsx","Select","fullWidth","variant","onChange","e","setData","target","children","map","_jsxs","MenuItem","display","opacity","fontSize","fontStyle","color","t","CircularProgress","RtspCamera","constructor","super","updateStream","id","state","val","this","loading","setState","drawCamera","videoRef","full","fullVideoRef","onCameras","accepted","error","console","onAliveChanged","getNameAndInstance","rxData","alive","propertiesUpdate","videoInterval","currentCam","getWidgetInfo","visSet","visName","visWidgetLabel","visWidgetSetLabel","visSetLabel","visSetColor","visAttrs","fields","hidden","tooltip","component","visDefaultStyle","visPrev","ref","canvas","current","getContext","imageObj","Image","src","onload","drawImage","onerror","pos","indexOf","substring","undefined","useMessages","checkFeatureSupported","unsubscribeFromInstance","unsubscribeState","subscribeOnInstance","getImageWidth","subscribeState","clearRect","expire","isFull","_this$videoRef$curren","parentElement","clientWidth","subscribeOnAlive","subsribedOnAlive","componentDidMount","setTimeout","setInterval","onRxDataChanged","componentWillUnmount","clearInterval","catch","renderDialog","Dialog","maxWidth","open","onClose","DialogTitle","widgetTitle","DialogContent","DialogActions","Button","onClick","stopPropagation","preventDefault","startIcon","Close","renderWidgetBody","content","progress","top","left","noCard","widget","usedInWidget","wrapContent","boxSizing","paddingBottom","SnapshotCamera","updateImage","getUrl","restartPollingInterval","default","noTranslation","options","_this$fullVideoRef$cu","pollingInterval","parseInt","pollingIntervalFull","url","bigCamera","alt","Date","now","noCacheByFull","rotate","p","join","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","key","__self","__source","q","c","a","g","b","d","h","call","defaultProps","$$typeof","_owner","exports","jsx","jsxs","module"],"sourceRoot":""}